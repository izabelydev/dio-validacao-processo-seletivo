name: "[FEATURE] Build e PR"

on:
  push:
    branches:
      - feature**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Verificar código
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Instalar Maven
        run: sudo apt-get install -y maven

      - name: Construir projeto com Maven
        run: mvn clean install -DskipTests

  pull-request:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Verificar código
        uses: actions/checkout@v3

      - name: Instalar GitHub CLI
        run: sudo apt-get install -y gh

      - name: Autenticar com GitHub CLI
        run: echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Obter nome da branch atual
        run: echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Verificar branch 'main'
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          if ! git ls-remote --exit-code --heads origin main; then
            echo "Branch 'main' não encontrada. Criando..."
            git checkout --orphan main
            git commit --allow-empty -m "Initial commit on main"
            git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} main
          else
            echo "Branch 'main' já existe."
          fi

      - name: Enviar branch de feature para o remoto
        run: git push origin $BRANCH_NAME

      - name: Criar pull request se necessário
        run: |
          # Atualizar a branch main e a branch feature
          git fetch origin main
          git checkout $BRANCH_NAME
          
          # Fazer merge da branch main na feature para garantir história em comum
          git merge origin/main --no-ff --no-commit || true

          # Verificar se existe PR aberto
          EXISTING=$(gh pr list --head $BRANCH_NAME --base main --state open --json number --jq '.[].number')
          if [ -z "$EXISTING" ]; then
            echo "Nenhum PR aberto encontrado. Criando PR..."
            
            # Criar um commit se necessário (apenas se o merge resultar em mudanças)
            if [ $(git diff --stat) != '' ]; then
              git commit -m "Merge main into $BRANCH_NAME"
              git push origin $BRANCH_NAME
            fi

            # Criar o PR
            gh pr create --base main --head $BRANCH_NAME --title "Merge main <-- $BRANCH_NAME" --body "Pull request automático"
          else
            echo "PR já existe: #$EXISTING. Novo commit já foi adicionado ao PR."
          fi

permissions:
  contents: write
  pull-requests: write
